# This file is automatically generated by Keystone, do not modify it manually.
# Modify your Keystone config when you want to change this.

type User {
  id: ID!
  name: String
  email: String
  password: PasswordState
  createdAt: DateTime
}

type PasswordState {
  isSet: Boolean!
}

scalar DateTime @specifiedBy(url: "https://datatracker.ietf.org/doc/html/rfc3339#section-5.6")

input UserWhereUniqueInput {
  id: ID
  email: String
}

input UserWhereInput {
  AND: [UserWhereInput!]
  OR: [UserWhereInput!]
  NOT: [UserWhereInput!]
  id: IDFilter
  name: StringFilter
  email: StringFilter
  createdAt: DateTimeNullableFilter
}

input IDFilter {
  equals: ID
  in: [ID!]
  notIn: [ID!]
  lt: ID
  lte: ID
  gt: ID
  gte: ID
  not: IDFilter
}

input StringFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  mode: QueryMode
  not: NestedStringFilter
}

enum QueryMode {
  default
  insensitive
}

input NestedStringFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringFilter
}

input DateTimeNullableFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: DateTimeNullableFilter
}

input UserOrderByInput {
  id: OrderDirection
  name: OrderDirection
  email: OrderDirection
  createdAt: OrderDirection
}

enum OrderDirection {
  asc
  desc
}

input UserUpdateInput {
  name: String
  email: String
  password: String
  createdAt: DateTime
}

input UserUpdateArgs {
  where: UserWhereUniqueInput!
  data: UserUpdateInput!
}

input UserCreateInput {
  name: String
  email: String
  password: String
  createdAt: DateTime
}

type Fake {
  id: ID!
  theme: String
  subtheme: String
  discription: String
  verdict: String
  source: String
  date: String
  link: String
  country: String
  disproof: String
  tags: String
  vox_article_id: Int
  video_id: String
  infographic_id: String
}

input FakeWhereUniqueInput {
  id: ID
}

input FakeWhereInput {
  AND: [FakeWhereInput!]
  OR: [FakeWhereInput!]
  NOT: [FakeWhereInput!]
  id: IDFilter
  theme: StringFilter
  subtheme: StringFilter
  discription: StringFilter
  verdict: StringFilter
  source: StringFilter
  date: StringFilter
  link: StringFilter
  country: StringFilter
  disproof: StringFilter
  tags: StringFilter
  vox_article_id: IntNullableFilter
  video_id: StringFilter
  infographic_id: StringFilter
}

input IntNullableFilter {
  equals: Int
  in: [Int!]
  notIn: [Int!]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: IntNullableFilter
}

input FakeOrderByInput {
  id: OrderDirection
  theme: OrderDirection
  subtheme: OrderDirection
  discription: OrderDirection
  verdict: OrderDirection
  source: OrderDirection
  date: OrderDirection
  link: OrderDirection
  country: OrderDirection
  disproof: OrderDirection
  tags: OrderDirection
  vox_article_id: OrderDirection
  video_id: OrderDirection
  infographic_id: OrderDirection
}

input FakeUpdateInput {
  theme: String
  subtheme: String
  discription: String
  verdict: String
  source: String
  date: String
  link: String
  country: String
  disproof: String
  tags: String
  vox_article_id: Int
  video_id: String
  infographic_id: String
}

input FakeUpdateArgs {
  where: FakeWhereUniqueInput!
  data: FakeUpdateInput!
}

input FakeCreateInput {
  theme: String
  subtheme: String
  discription: String
  verdict: String
  source: String
  date: String
  link: String
  country: String
  disproof: String
  tags: String
  vox_article_id: Int
  video_id: String
  infographic_id: String
}

type Article {
  id: ID!
  vox_article_title: String
  vox_article_link: String
  vox_article_image_link: String
}

input ArticleWhereUniqueInput {
  id: ID
}

input ArticleWhereInput {
  AND: [ArticleWhereInput!]
  OR: [ArticleWhereInput!]
  NOT: [ArticleWhereInput!]
  id: IDFilter
  vox_article_title: StringFilter
  vox_article_link: StringFilter
  vox_article_image_link: StringFilter
}

input ArticleOrderByInput {
  id: OrderDirection
  vox_article_title: OrderDirection
  vox_article_link: OrderDirection
  vox_article_image_link: OrderDirection
}

input ArticleUpdateInput {
  vox_article_title: String
  vox_article_link: String
  vox_article_image_link: String
}

input ArticleUpdateArgs {
  where: ArticleWhereUniqueInput!
  data: ArticleUpdateInput!
}

input ArticleCreateInput {
  vox_article_title: String
  vox_article_link: String
  vox_article_image_link: String
}

type Video {
  id: ID!
  vox_video_title: String
  vox_video_link: String
}

input VideoWhereUniqueInput {
  id: ID
}

input VideoWhereInput {
  AND: [VideoWhereInput!]
  OR: [VideoWhereInput!]
  NOT: [VideoWhereInput!]
  id: IDFilter
  vox_video_title: StringFilter
  vox_video_link: StringFilter
}

input VideoOrderByInput {
  id: OrderDirection
  vox_video_title: OrderDirection
  vox_video_link: OrderDirection
}

input VideoUpdateInput {
  vox_video_title: String
  vox_video_link: String
}

input VideoUpdateArgs {
  where: VideoWhereUniqueInput!
  data: VideoUpdateInput!
}

input VideoCreateInput {
  vox_video_title: String
  vox_video_link: String
}

type Infographic {
  id: ID!
  vox_infographic_title: String
  vox_infographic_link: String
}

input InfographicWhereUniqueInput {
  id: ID
}

input InfographicWhereInput {
  AND: [InfographicWhereInput!]
  OR: [InfographicWhereInput!]
  NOT: [InfographicWhereInput!]
  id: IDFilter
  vox_infographic_title: StringFilter
  vox_infographic_link: StringFilter
}

input InfographicOrderByInput {
  id: OrderDirection
  vox_infographic_title: OrderDirection
  vox_infographic_link: OrderDirection
}

input InfographicUpdateInput {
  vox_infographic_title: String
  vox_infographic_link: String
}

input InfographicUpdateArgs {
  where: InfographicWhereUniqueInput!
  data: InfographicUpdateInput!
}

input InfographicCreateInput {
  vox_infographic_title: String
  vox_infographic_link: String
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

type Mutation {
  createUser(data: UserCreateInput!): User
  createUsers(data: [UserCreateInput!]!): [User]
  updateUser(where: UserWhereUniqueInput!, data: UserUpdateInput!): User
  updateUsers(data: [UserUpdateArgs!]!): [User]
  deleteUser(where: UserWhereUniqueInput!): User
  deleteUsers(where: [UserWhereUniqueInput!]!): [User]
  createFake(data: FakeCreateInput!): Fake
  createFakes(data: [FakeCreateInput!]!): [Fake]
  updateFake(where: FakeWhereUniqueInput!, data: FakeUpdateInput!): Fake
  updateFakes(data: [FakeUpdateArgs!]!): [Fake]
  deleteFake(where: FakeWhereUniqueInput!): Fake
  deleteFakes(where: [FakeWhereUniqueInput!]!): [Fake]
  createArticle(data: ArticleCreateInput!): Article
  createArticles(data: [ArticleCreateInput!]!): [Article]
  updateArticle(where: ArticleWhereUniqueInput!, data: ArticleUpdateInput!): Article
  updateArticles(data: [ArticleUpdateArgs!]!): [Article]
  deleteArticle(where: ArticleWhereUniqueInput!): Article
  deleteArticles(where: [ArticleWhereUniqueInput!]!): [Article]
  createVideo(data: VideoCreateInput!): Video
  createVideos(data: [VideoCreateInput!]!): [Video]
  updateVideo(where: VideoWhereUniqueInput!, data: VideoUpdateInput!): Video
  updateVideos(data: [VideoUpdateArgs!]!): [Video]
  deleteVideo(where: VideoWhereUniqueInput!): Video
  deleteVideos(where: [VideoWhereUniqueInput!]!): [Video]
  createInfographic(data: InfographicCreateInput!): Infographic
  createInfographics(data: [InfographicCreateInput!]!): [Infographic]
  updateInfographic(where: InfographicWhereUniqueInput!, data: InfographicUpdateInput!): Infographic
  updateInfographics(data: [InfographicUpdateArgs!]!): [Infographic]
  deleteInfographic(where: InfographicWhereUniqueInput!): Infographic
  deleteInfographics(where: [InfographicWhereUniqueInput!]!): [Infographic]
  endSession: Boolean!
  authenticateUserWithPassword(email: String!, password: String!): UserAuthenticationWithPasswordResult
  createInitialUser(data: CreateInitialUserInput!): UserAuthenticationWithPasswordSuccess!
}

union UserAuthenticationWithPasswordResult = UserAuthenticationWithPasswordSuccess | UserAuthenticationWithPasswordFailure

type UserAuthenticationWithPasswordSuccess {
  sessionToken: String!
  item: User!
}

type UserAuthenticationWithPasswordFailure {
  message: String!
}

input CreateInitialUserInput {
  name: String
  email: String
  password: String
}

type Query {
  users(where: UserWhereInput! = {}, orderBy: [UserOrderByInput!]! = [], take: Int, skip: Int! = 0): [User!]
  user(where: UserWhereUniqueInput!): User
  usersCount(where: UserWhereInput! = {}): Int
  fakes(where: FakeWhereInput! = {}, orderBy: [FakeOrderByInput!]! = [], take: Int, skip: Int! = 0): [Fake!]
  fake(where: FakeWhereUniqueInput!): Fake
  fakesCount(where: FakeWhereInput! = {}): Int
  articles(where: ArticleWhereInput! = {}, orderBy: [ArticleOrderByInput!]! = [], take: Int, skip: Int! = 0): [Article!]
  article(where: ArticleWhereUniqueInput!): Article
  articlesCount(where: ArticleWhereInput! = {}): Int
  videos(where: VideoWhereInput! = {}, orderBy: [VideoOrderByInput!]! = [], take: Int, skip: Int! = 0): [Video!]
  video(where: VideoWhereUniqueInput!): Video
  videosCount(where: VideoWhereInput! = {}): Int
  infographics(where: InfographicWhereInput! = {}, orderBy: [InfographicOrderByInput!]! = [], take: Int, skip: Int! = 0): [Infographic!]
  infographic(where: InfographicWhereUniqueInput!): Infographic
  infographicsCount(where: InfographicWhereInput! = {}): Int
  keystone: KeystoneMeta!
  authenticatedItem: AuthenticatedItem
}

union AuthenticatedItem = User

type KeystoneMeta {
  adminMeta: KeystoneAdminMeta!
}

type KeystoneAdminMeta {
  lists: [KeystoneAdminUIListMeta!]!
  list(key: String!): KeystoneAdminUIListMeta
}

type KeystoneAdminUIListMeta {
  key: String!
  itemQueryName: String!
  listQueryName: String!
  hideCreate: Boolean!
  hideDelete: Boolean!
  path: String!
  label: String!
  singular: String!
  plural: String!
  description: String
  initialColumns: [String!]!
  pageSize: Int!
  labelField: String!
  fields: [KeystoneAdminUIFieldMeta!]!
  groups: [KeystoneAdminUIFieldGroupMeta!]!
  initialSort: KeystoneAdminUISort
  isHidden: Boolean!
  isSingleton: Boolean!
}

type KeystoneAdminUIFieldMeta {
  path: String!
  label: String!
  description: String
  isOrderable: Boolean!
  isFilterable: Boolean!
  fieldMeta: JSON
  viewsIndex: Int!
  customViewsIndex: Int
  createView: KeystoneAdminUIFieldMetaCreateView!
  listView: KeystoneAdminUIFieldMetaListView!
  itemView(id: ID): KeystoneAdminUIFieldMetaItemView
  search: QueryMode
}

type KeystoneAdminUIFieldMetaCreateView {
  fieldMode: KeystoneAdminUIFieldMetaCreateViewFieldMode!
}

enum KeystoneAdminUIFieldMetaCreateViewFieldMode {
  edit
  hidden
}

type KeystoneAdminUIFieldMetaListView {
  fieldMode: KeystoneAdminUIFieldMetaListViewFieldMode!
}

enum KeystoneAdminUIFieldMetaListViewFieldMode {
  read
  hidden
}

type KeystoneAdminUIFieldMetaItemView {
  fieldMode: KeystoneAdminUIFieldMetaItemViewFieldMode
  fieldPosition: KeystoneAdminUIFieldMetaItemViewFieldPosition
}

enum KeystoneAdminUIFieldMetaItemViewFieldMode {
  edit
  read
  hidden
}

enum KeystoneAdminUIFieldMetaItemViewFieldPosition {
  form
  sidebar
}

type KeystoneAdminUIFieldGroupMeta {
  label: String!
  description: String
  fields: [KeystoneAdminUIFieldMeta!]!
}

type KeystoneAdminUISort {
  field: String!
  direction: KeystoneAdminUISortDirection!
}

enum KeystoneAdminUISortDirection {
  ASC
  DESC
}
